{"version":3,"file":"index.mjs.map","sources":["src/amend/index.js","src/isbot/index.js","src/index.js"],"sourcesContent":["/**\n * Mutate given list of patter strings\n * @param {string[]} list\n * @returns {string[]}\n */\nexport function amend (list) {\n  try {\n    // Risk: Uses lookbehind assertion, avoid breakage in parsing by using RegExp constructor\n    new RegExp('(?<! cu)bot').test('dangerbot') // eslint-disable-line prefer-regex-literals\n  } catch (error) {\n    // Skip regex fixes\n    return list\n  }\n\n  // Addresses: Cubot device\n  list.splice(list.lastIndexOf('bot'), 1)\n  list.push('(?<! cu)bot')\n  // Addresses: Android webview\n  list.splice(list.lastIndexOf('google'), 1)\n  list.push('(?<! (channel\\\\/|google\\\\/))google(?!(app|\\\\/google))')\n\n  // Addresses: Yandex browser\n  list.splice(list.lastIndexOf('search'), 1)\n  list.push('(?<! (ya|yandex))search')\n  // Addresses: libhttp browser\n  list.splice(list.lastIndexOf('http'), 1)\n  list.push('(?<!(lib))http')\n  // Addresses: java based browsers\n  list.splice(list.lastIndexOf('java'), 1)\n  list.push('java(?!;)')\n  // Addresses: Mozilla nightly build https://github.com/mozilla-mobile/android-components/search?q=MozacFetch\n  list.splice(list.lastIndexOf('fetch'), 1)\n  list.push('(?<!(mozac))fetch')\n\n  return list\n}\n","import list from '../list.json'\nimport { amend } from '../amend/index.js'\n\namend(list)\n\nconst flags = 'i'\n\n/**\n * Test user agents for matching patterns\n */\nexport class Isbot {\n  /**\n   * @type {string[]}\n   */\n  #list;\n\n  /**\n   * @type {RegExp}\n   */\n  #pattern;\n\n  constructor (patterns) {\n    this.#list = patterns || list.slice()\n    this.#update()\n\n    const isbot = ua => this.test(ua)\n\n    return Object.defineProperties(\n      isbot,\n      Object.getOwnPropertyNames(Isbot.prototype).filter(\n        prop => !['constructor'].includes(prop)\n      ).reduce(\n        (accumulator, prop) => Object.assign(\n          accumulator,\n          { [prop]: { get: () => this[prop].bind(this) } }\n        ),\n        {}\n      )\n    )\n  }\n\n  /**\n   * Recreate the pattern from rules list\n   */\n  #update () {\n    this.#pattern = new RegExp(\n      this.#list.join('|'),\n      flags\n    )\n  }\n\n  /**\n   * Find the first index of an existing rule or -1 if not found\n   * @param  {string} rule\n   * @returns {number}\n   */\n  #index (rule) {\n    return this.#list.indexOf(rule.toLowerCase())\n  }\n\n  /**\n   * Match given string against out pattern\n   * @param  {string} ua User Agent string\n   * @returns {boolean}\n   */\n  test (ua) {\n    return Boolean(ua) && this.#pattern.test(ua)\n  }\n\n  /**\n   * Get the match for strings' known crawler pattern\n   * @param  {string} ua User Agent string\n   * @returns {string|null}\n   */\n  find (ua = '') {\n    const match = ua.match(this.#pattern)\n    return match && match[0]\n  }\n\n  /**\n   * Get the patterns that match user agent string if any\n   * @param  {string} ua User Agent string\n   * @returns {string[]}\n   */\n  matches (ua = '') {\n    return this.#list.filter(\n      entry => new RegExp(entry, flags).test(ua)\n    )\n  }\n\n  /**\n   * Clear all patterns that match user agent\n   * @param  {string} ua User Agent string\n   * @returns {void}\n   */\n  clear (ua = '') {\n    this.exclude(this.matches(ua))\n  }\n\n  /**\n   * Extent patterns for known crawlers\n   * @param  {string[]} filters\n   * @returns {void}\n   */\n  extend (filters = []) {\n    [].push.apply(\n      this.#list,\n      filters.filter(\n        rule => this.#index(rule) === -1\n      ).map(\n        filter => filter.toLowerCase()\n      )\n    )\n    this.#update()\n  }\n\n  /**\n   * Exclude patterns from bot pattern rule\n   * @param  {string[]} filters\n   * @returns {void}\n   */\n  exclude (filters = []) {\n    let { length } = filters\n    while (length--) {\n      const index = this.#index(filters[length])\n      if (index > -1) {\n        this.#list.splice(index, 1)\n      }\n    }\n    this.#update()\n  }\n\n  /**\n   * Create a new Isbot instance using given list or self's list\n   * @param  {string[]} [list]\n   * @returns {Isbot}\n   */\n  spawn (list) {\n    return new Isbot(list || this.#list)\n  }\n}\n","import { Isbot } from './isbot/index.js'\n\nconst isbot = new Isbot()\n\nexport default isbot\n"],"names":["amend","list","RegExp","test","error","splice","lastIndexOf","push","flags","Isbot","patterns","slice","isbot","ua","Object","defineProperties","getOwnPropertyNames","prototype","filter","prop","includes","reduce","accumulator","assign","get","bind","Boolean","match","entry","exclude","matches","filters","apply","rule","map","toLowerCase","length","index","join","indexOf"],"mappings":"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"}